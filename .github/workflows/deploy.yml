name: Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - develop
      - main
    paths:
      - back/**
      - web/**
      - deploy/**
      - common/**

jobs:
  deployment:
    runs-on: ubuntu-latest
    environment: production
    concurrency: production
    steps:
      - uses: actions/checkout@v3

      - name: Set variables
        run: |
          if [[ "${{ github.base_ref }}" == "main" || "${{github.ref}}" == "refs/heads/main" ]]; then
            echo "project=liane" >> $GITHUB_ENV
            echo "branch=main" >> $GITHUB_ENV
          fi

          if [[ "${{ github.base_ref }}" == "develop" || "${{github.ref}}" == "refs/heads/develop"  ]]; then
            echo "project=liane-dev" >> $GITHUB_ENV
            echo "branch=develop" >> $GITHUB_ENV
          fi

      - name: Find Exact Version
        id: exact-version
        uses: jimschubert/query-tag-action@v2
        with:
          abbrev: 1
          skip-unshallow: true

      - uses: ./.github/workflows/common.yml

      - name: Download common dist
        uses: actions/download-artifact@v3
        with:
          name: liane-common-${{steps.exact-version.outputs.tag}}.tar

      - name: Untar dist
        working-directory: ./common
        run: tar -x ../liane-common.tar


      - name: Deploy on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            set -e
            cd ~
            git clone -b "${{ env.branch }}" git@github.com:oxymore-tech/liane.git "${{ env.project }}" || true;
            cd "${{ env.project }}/deploy"
            git pull
            ./liane test
            ./liane start

      - name: Copy test results
        uses: nicklasfrahm/scp-action@main
        if: always()
        with:
          direction: download
          insecure_ignore_fingerprint: true
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          source: "/tmp/it-${{ env.project }}/test-results.trx"
          target: "test-results.trx"

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: DotNET Tests
          path: "test-results.trx"
          reporter: dotnet-trx
          fail-on-error: true
