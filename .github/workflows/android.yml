name: Android Build

on: push

jobs:
  android-build:
    name: Android Build
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up our JDK environment
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 18.x
          cache: npm
          cache-dependency-path: "./app/package-lock.json"

      - name: Find npm cache
        working-directory: ./app
        id: npm-cache-path
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache-path.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('./app/package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-

      - name: Install dependencies
        working-directory: ./app
        run: npm ci --legacy-peer-deps

      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-

      - name: Generate App APK
        working-directory: ./app
        run: |
          cd android && ./gradlew assembleRelease --no-daemon

      - name: Sign APK
        id: sign_app
        uses: r0adkll/sign-android-release@v1
        with:
          working-directory: ./app
          releaseDirectory: android/app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}

      ## Distribute app to Firebase App Distribution for testing / use google play internal track if you have a google play account
      - name: upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.ANDROID_FIREBASE_APP_ID}}
          token: ${{secrets.ANDROID_FIREBASE_TOKEN}}
          groups: testers
          file: ${{steps.sign_app.outputs.signedReleaseFile}}
