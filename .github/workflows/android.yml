name: Android Build

on:
  push:
    branches:
      - app/no_expo

jobs:
  npm-build:
    name: Npm Install
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        
      - name: Find Tag
        id: tagger
        uses: jimschubert/query-tag-action@v1

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: ./app/package-lock.json

      - name: Get npm cache directory
        id: npm-cache-dir
        working-directory: ./app
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('./app/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        working-directory: ./app
        run: npm ci --legacy-peer-deps
        
      - name: Set up our JDK environment
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11
    
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('./app/android/*.gradle*', './app/android/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
    
      - name: Decode Keystore
        id: decode_keystore
        uses: timheuer/base64-to-file@v1
        with:
          fileName: 'release.keystore'
          encodedString: ${{ secrets.ANDROID_SIGNING_KEY }}
            
      - name: Generate App Bundle
        working-directory: ./app
        run: |
          cd android && ./gradlew -PversCode=${{ github.run_number }} -PversName=${{steps.tagger.outputs.tag}} bundleRelease --no-daemon
        env:
          ANDROID_KEY_STORE_FILE: ${{ steps.decode_keystore.outputs.filePath }}
          ANDROID_KEY_STORE_PASSWORD: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
          
#
#      - name: Sign Bundle
#        id: sign_app
#        uses: r0adkll/sign-android-release@v1
#        with:
#          releaseDirectory: app/android/app/build/outputs/bundle/release
#          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
#          alias: ${{ secrets.ANDROID_ALIAS }}
#          keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
#          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}

      ## Distribute app to Firebase App Distribution for testing / use google play internal track if you have a google play account
#      - name: upload artifact to Firebase App Distribution
#        uses: wzieba/Firebase-Distribution-Github-Action@v1
#        with:
#          appId: ${{secrets.ANDROID_FIREBASE_APP_ID}}
#          token: ${{secrets.ANDROID_FIREBASE_TOKEN}}
#          groups: testers
#          file: ${{steps.sign_app.outputs.signedReleaseFile}}
  
      - name: Upload App to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.ANDROID_SERVICE_ACCOUNT_JSON_TEXT }}
          packageName: tech.oxymore.liane
          releaseFiles: app/android/app/build/outputs/bundle/release/*.aab
          track: beta
          status: completed
          inAppUpdatePriority: 5