name: Android Build

on:
  push:
    branches:
      - app/no_expo

jobs:
  android-build:
    name: Android Build
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
        
      - name: Find Tag
        id: tagger
        uses: jimschubert/query-tag-action@v1

      - name: Set up our JDK environment
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 18.x
          cache: npm
          cache-dependency-path: "./app/package-lock.json"

      - name: Find npm cache
        working-directory: ./app
        id: npm-cache-path
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache-path.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('./app/package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-

      - name: Install dependencies
        working-directory: ./app
        run: npm ci --legacy-peer-deps

      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-

      - name: Generate App Bundle
        working-directory: ./app
        run: |
          cd android && ./gradlew -PversCode=${{ github.run_number }} -PversName=${{steps.tagger.outputs.tag}} bundleRelease --no-daemon

      - name: Sign Bundle
        id: sign_app
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/android/app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}

      ## Distribute app to Firebase App Distribution for testing / use google play internal track if you have a google play account
#      - name: upload artifact to Firebase App Distribution
#        uses: wzieba/Firebase-Distribution-Github-Action@v1
#        with:
#          appId: ${{secrets.ANDROID_FIREBASE_APP_ID}}
#          token: ${{secrets.ANDROID_FIREBASE_TOKEN}}
#          groups: testers
#          file: ${{steps.sign_app.outputs.signedReleaseFile}}
  
      - name: Upload App to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.ANDROID_SERVICE_ACCOUNT_JSON_TEXT }}
          packageName: tech.oxymore.liane
          releaseFiles: app/android/app/build/outputs/bundle/release/*.aab
          track: alpha
          status: completed
          inAppUpdatePriority: 5
          mappingFile: app/android/app/build/outputs/mapping/release/mapping.txt
          debugSymbols: app/android/app/intermediates/merged_native_libs/release/out/lib